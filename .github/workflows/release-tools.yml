name: Build Release Tools
on:
  workflow_run:
    workflows: [Create Release Page]
    types: [completed]

env:
  RUSTFLAGS: -D warnings
  CARGO_INCREMENTAL: 0
  RUSTUP_MAX_RETRIES: 10
  CARGO_NET_RETRY: 10

jobs:
  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: get release url
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          run_id: ${{ github.event.workflow_run.id }}
          name: release assets url
      - name: read release url
        id: release
        run: echo ::set-output name=upload_url::$(cat release-upload.url)
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}

  build:
    runs-on: ${{ matrix.os }}
    needs: release

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build all executables
        run: cargo build --release --all --bins

      - run: ls target/release

      - id: mls
        name: get version of move-language-server
        uses: ./.github/actions/crate-version
        with: { crate: move-language-server }

      - id: movec
        name: get version of movec
        uses: ./.github/actions/crate-version
        with: { crate: movec }

      - id: executor
        name: get version of move-executor
        uses: ./.github/actions/crate-version
        with: { crate: move-executor }

      - id: disassembler
        name: get version of disassembler
        uses: ./.github/actions/crate-version
        with: { crate: disassembler }

      - if: ${{ matrix.platform == 'win' }}
        run: |
          echo "OS_BIN_EXT=.exe" >> $GITHUB_ENV
          echo "::set-env name=OS_BIN_EXT::.exe"

      - name: rename some executables
        run: |
          mv ./target/release/executor_cli$OS_BIN_EXT ./target/release/move-executor$OS_BIN_EXT
          mv ./target/release/disassembler$OS_BIN_EXT ./target/release/move-disassembler$OS_BIN_EXT

      - name: Archive
        id: archive
        run: |
          mv ./target/release/executor_cli$OS_BIN_EXT ./target/release/move-executor$OS_BIN_EXT
          mv ./target/release/disassembler$OS_BIN_EXT ./target/release/move-disassembler$OS_BIN_EXT
          MLS_NAME=move-language-server-${{ steps.mls.outputs.version }}-${{ matrix.platform }}
          MOVEC_NAME=movec-${{ steps.movec.outputs.version }}-${{ matrix.platform }}
          EXECUTOR_NAME=executor-${{ steps.executor.outputs.version }}-${{ matrix.platform }}
          DISASSEMBLER_NAME=disassembler-${{ steps.disassembler.outputs.version }}-${{ matrix.platform }}
          TARBALL_MLS=$MLS_NAME.tar.gz
          TARBALL_MOVEC=$MOVEC_NAME.tar.gz
          TARBALL_EXECUTOR=$EXECUTOR_NAME.tar.gz
          TARBALL_DISASSEMBLER=$DISASSEMBLER_NAME.tar.gz
          tar -czf $TARBALL_MLS ./target/release/move-language-server$OS_BIN_EXT
          tar -czf $TARBALL_MOVEC ./target/release/movec$OS_BIN_EXT
          tar -czf $TARBALL_EXECUTOR ./target/release/move-executor$OS_BIN_EXT
          tar -czf $TARBALL_DISASSEMBLER ./target/release/move-disassembler$OS_BIN_EXT
          echo "::set-output name=mls::$TARBALL_MLS"
          echo "::set-output name=movec::$TARBALL_MOVEC"
          echo "::set-output name=executor::$TARBALL_EXECUTOR"
          echo "::set-output name=disassembler::$TARBALL_DISASSEMBLER"

      - name: Upload MLS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.archive.outputs.mls }}
          asset_name: ${{ steps.archive.outputs.mls }}
          asset_content_type: application/gzip

      - name: Upload Movec
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.archive.outputs.movec_ar }}
          asset_name: ${{ steps.archive.outputs.movec }}
          asset_content_type: application/gzip

      - name: Upload Executor
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.archive.outputs.executor_ar }}
          asset_name: ${{ steps.archive.outputs.executor }}
          asset_content_type: application/gzip

      - name: Upload Disassembler
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.archive.outputs.disassembler_ar }}
          asset_name: ${{ steps.archive.outputs.disassembler }}
          asset_content_type: application/gzip
